parameters:
  featurestorebundle:
    db_name: '%kernel.environment%_feature_store'
    base_path: 'dbfs:/%kernel.environment%_feature_store'
    feature:
      table:
        name_template: 'features_{entity}'
        path_template: '%featurestorebundle.base_path%/features/{entity}.delta'
      backend: delta_path # available: delta_table, delta_path, databricks
      defaults:
        category:
        owner:
        start_date: '2018-01-01'
        frequency: 'daily'
    metadata:
      table:
        name_template: 'features_metadata'
        path_template: '%featurestorebundle.base_path%/metadata/metadata.delta'
      backend: delta_path # available: delta_table, delta_path
      display_in_notebook: True
    target:
      table:
        name_template: 'targets_{entity}'
        path_template: '%featurestorebundle.base_path%/targets/{entity}.delta'
      enum_table:
        name: 'targets_enum'
        path: '%featurestorebundle.base_path%/targets/targets_enum.delta'
      backend: delta_path # available: delta_table, delta_path
    checkpoint:
      default_checkpoint_dir: 'dbfs:/tmp/checkpoints'
    orchestration:
      timestamp_shift: '-0d'
      num_parallel: 1
      checkpoint_feature_results: False
      checkpoint_before_merge: False
      clean_checkpoint_dir: False
      features_join:
        method: 'union_with_window' # available: union_with_window, left_with_checkpointing
        batch_size: 1
      notebook:
        defaults:
          start_date: '%featurestorebundle.feature.defaults.start_date%'
          frequency: '%featurestorebundle.feature.defaults.frequency%'
          arguments: {}
      stages:
      post_actions:
    entities:
    widgets:
      defaults:
        sample: "complete"
    time_windows:
    sampling:
      rate: 0.01
      seed: 42

services:
  featurestorebundle.logger:
    class: logging.Logger
    factory: ['@loggerbundle.LoggerFactory', 'create']
    arguments:
      - 'feature_store'

  featurestorebundle.db.TableNames:
    arguments:
      - '%featurestorebundle.db_name%'
      - '%featurestorebundle.feature.table.name_template%'
      - '%featurestorebundle.feature.table.path_template%'
      - '%featurestorebundle.metadata.table.name_template%'
      - '%featurestorebundle.metadata.table.path_template%'
      - '%featurestorebundle.target.table.name_template%'
      - '%featurestorebundle.target.table.path_template%'
      - '%featurestorebundle.target.enum_table.name%'
      - '%featurestorebundle.target.enum_table.path%'

  featurestorebundle.delta.feature.writer.DeltaFeaturesMergeConfigGenerator:

  featurestorebundle.delta.feature.writer.DeltaFeaturesRegistrator:

  featurestorebundle.delta.feature.writer.DeltaTableFeaturesPreparer:

  featurestorebundle.delta.feature.writer.DeltaPathFeaturesPreparer:

  featurestorebundle.delta.feature.writer.DeltaFeaturesDataHandler:
    arguments:
      - '@featurestorebundle.logger'

  featurestorebundle.delta.feature.writer.DeltaTableFeaturesWriter:
    arguments:
      - !tagged_aliased ['metadata.writer', '%featurestorebundle.metadata.backend%']
    tags:
      - {name: 'feature.writer', alias: 'delta_table'}

  featurestorebundle.delta.feature.writer.DeltaPathFeaturesWriter:
    arguments:
      - !tagged_aliased ['metadata.writer', '%featurestorebundle.metadata.backend%']
    tags:
      - {name: 'feature.writer', alias: 'delta_path'}

  featurestorebundle.databricks.feature.writer.DatabricksFeatureStoreWriter:
    arguments:
      - !tagged_aliased ['metadata.writer', '%featurestorebundle.metadata.backend%']
    tags:
      - {name: 'feature.writer', alias: 'databricks'}

  featurestorebundle.databricks.feature.writer.DatabricksFeatureStoreDataHandler:
    arguments:
      - '@featurestorebundle.logger'

  featurestorebundle.feature.writer.FeaturesWriter:
    arguments:
      - !tagged_aliased ['feature.writer', '%featurestorebundle.feature.backend%']

  featurestorebundle.delta.feature.reader.DeltaTableFeaturesReader:
    arguments:
      - '@featurestorebundle.logger'
    tags:
      - {name: 'feature.reader', alias: 'delta_table'}

  featurestorebundle.delta.feature.reader.DeltaPathFeaturesReader:
    arguments:
      - '@featurestorebundle.logger'
    tags:
      - {name: 'feature.reader', alias: 'delta_path'}

  featurestorebundle.databricks.feature.reader.DatabricksFeatureStoreReader:
    arguments:
      - '@featurestorebundle.logger'
    tags:
      - {name: 'feature.reader', alias: 'databricks'}

  featurestorebundle.delta.EmptyDataFrameCreator:

  featurestorebundle.delta.TableExistenceChecker:

  featurestorebundle.delta.PathExistenceChecker:

  featurestorebundle.delta.TableSchemaMerger:

  featurestorebundle.delta.PathSchemaMerger:

  featurestorebundle.delta.TableCreator:
    arguments:
      - '@featurestorebundle.logger'

  featurestorebundle.delta.PathCreator:
    arguments:
      - '@featurestorebundle.logger'

  featurestorebundle.delta.join.UnionWithWindowJoiner:
    tags:
      - {name: 'dataframe.joiner', alias: 'union_with_window'}

  featurestorebundle.delta.join.LeftWithCheckpointingJoiner:
    arguments:
      - '%featurestorebundle.orchestration.features_join.batch_size%'
    tags:
      - {name: 'dataframe.joiner', alias: 'left_with_checkpointing'}

  featurestorebundle.delta.feature.filter.FeaturesFilteringManager:

  featurestorebundle.delta.feature.filter.LatestFeaturesFilterer:

  featurestorebundle.delta.feature.filter.TargetFeaturesFilterer:

  featurestorebundle.delta.feature.filter.IncompleteRowsHandler:

  featurestorebundle.feature.FeatureTemplateMatcher:

  featurestorebundle.feature.ChangesCalculator:

  featurestorebundle.feature.FeatureListFactory:

  featurestorebundle.feature.FeaturesManager:

  featurestorebundle.feature.FeatureStore:
    arguments:
      - !tagged_aliased ['feature.reader', '%featurestorebundle.feature.backend%']
      - !tagged_aliased ['metadata.reader', '%featurestorebundle.metadata.backend%']
      - !tagged_aliased ['target.reader', '%featurestorebundle.target.backend%']

  featurestorebundle.delta.metadata.writer.DeltaTableMetadataWriter:
    tags:
      - {name: 'metadata.writer', alias: 'delta_table'}

  featurestorebundle.delta.metadata.writer.DeltaPathMetadataWriter:
    tags:
      - {name: 'metadata.writer', alias: 'delta_path'}

  featurestorebundle.delta.metadata.reader.DeltaTableMetadataReader:
    arguments:
      - '@featurestorebundle.logger'
    tags:
      - {name: 'metadata.reader', alias: 'delta_table'}

  featurestorebundle.delta.metadata.reader.DeltaPathMetadataReader:
    arguments:
      - '@featurestorebundle.logger'
    tags:
      - {name: 'metadata.reader', alias: 'delta_path'}

  featurestorebundle.delta.metadata.writer.DeltaMetadataHandler:
    arguments:
      - '@featurestorebundle.logger'

  featurestorebundle.delta.metadata.writer.DeltaTableMetadataPreparer:

  featurestorebundle.delta.metadata.writer.DeltaPathMetadataPreparer:

  featurestorebundle.delta.target.reader.DeltaTableTargetsReader:
    arguments:
      - '@featurestorebundle.logger'
    tags:
      - {name: 'target.reader', alias: 'delta_table'}

  featurestorebundle.delta.target.reader.DeltaPathTargetsReader:
    arguments:
      - '@featurestorebundle.logger'
    tags:
      - {name: 'target.reader', alias: 'delta_path'}

  featurestorebundle.delta.target.TargetsFilteringManager:

  featurestorebundle.metadata.MetadataHTMLDisplayer:

  featurestorebundle.metadata.DescriptionFiller:

  featurestorebundle.feature.FeaturesValidator:

  featurestorebundle.checkpoint.CheckpointGuard:
    arguments:
      - '%featurestorebundle.orchestration.checkpoint_feature_results%'
      - '%featurestorebundle.orchestration.checkpoint_before_merge%'
      - '%featurestorebundle.orchestration.clean_checkpoint_dir%'

  featurestorebundle.delta.feature.FeaturesPreparer:
    arguments:
      - '@featurestorebundle.logger'

  featurestorebundle.delta.feature.FeaturesJoiner:
    arguments:
      - !tagged_aliased ['dataframe.joiner', '%featurestorebundle.orchestration.features_join.method%']

  featurestorebundle.widgets.WidgetsFactory:
    arguments:
      - '%featurestorebundle.widgets.defaults%'
      - '%featurestorebundle.entities%'
      - '%featurestorebundle.orchestration.stages%'
      - !tagged_aliased ['target.reader', '%featurestorebundle.target.backend%']

  featurestorebundle.widgets.WidgetsGetter:

  featurestorebundle.entity.EntityGetter:
    arguments:
      - '%featurestorebundle.entities%'

  featurestorebundle.notebook.services.TimestampAdder:
    arguments:
      - '%featurestorebundle.orchestration.timestamp_shift%'
      - '%featurestorebundle.time_windows%'
      - '@featurestorebundle.logger'
      - '%featurestorebundle.sampling%'

  featurestorebundle.orchestration.DatabricksOrchestrator:
    arguments:
      - '@featurestorebundle.logger'
      - '%featurestorebundle.orchestration.stages%'
      - '%featurestorebundle.orchestration.num_parallel%'

  featurestorebundle.orchestration.PostActionsRunner:
    arguments:
      - '@featurestorebundle.logger'
      - '%featurestorebundle.orchestration.post_actions%'

  featurestorebundle.orchestration.NotebookTasksFactory:

  featurestorebundle.orchestration.Serializator:

  featurestorebundle.orchestration.CurrentNotebookDefinitionGetter:

  featurestorebundle.orchestration.NotebookDefinitionGetter:
    arguments:
      - '%featurestorebundle.orchestration%'

  featurestorebundle.frequency.FrequencyGuard:

  featurestorebundle.frequency.FrequencyChecker:

  featurestorebundle.checkpoint.CheckpointDirHandler:
    arguments:
      - '@featurestorebundle.logger'
      - '%featurestorebundle.checkpoint.default_checkpoint_dir%'

  featurestorebundle.delta.feature.NullHandler:

  featurestorebundle.utils.DateParser:
    arguments:
      - '@featurestorebundle.logger'

  featurestorebundle.utils.ColumnChecker:

  featurestorebundle.feature.FeaturesGetter:
    arguments:
      - '@featurestorebundle.logger'
